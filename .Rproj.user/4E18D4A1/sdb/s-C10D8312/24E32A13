{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Firesummary\"\nauthor: \"Derek Corcoran\"\ndate: \"August 25, 2016\"\noutput: html_document\n---\n\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(cache=FALSE)\n```\n\n#Abstract\n\nThis webpage will show the results of a bat survey study done in the Plumas National Forest in North California. The objective of this study is to determine the distribution of the different species of bats within the park. In order to do that we have performed occupancy models for the species present in the park. The results of this models will be shown as maps showing the probability of occurence of bats in each point, that is, if you see a value of 1, there is a 100% chance of finding a bat in that point, if there is a value of 0 there is 0% chance of finding that specie in that point, if there is a value of 0.5 there is a 50% chance of finding that specie in that point.\n\nAnother result\n\n```{r, message=FALSE, warning=FALSE, echo=FALSE,results='hide'}\n#first load libraries\nlibrary(raster)\nlibrary(rasterVis)\nlibrary(maps)\nlibrary(maptools)\nlibrary(rgdal)\nlibrary(latticeExtra)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(unmarked)\nlibrary(lubridate)\nlibrary(jpeg)\nlibrary(stargazer)\nlibrary(xtable)\nlibrary(MuMIn)\nlibrary(ggplot2)\nlibrary(RCurl)\nlibrary(foreign)\nlibrary(caret)\nlibrary(AICcmodavg)\n```\n\n```{r,echo=FALSE,warning=FALSE,message=FALSE,results='hide', cache=TRUE}\nPredictors<- readRDS(\"Predictors_Stack.rds\")\nplot(Predictors)\n```\n\n```{r,echo=FALSE, warning=FALSE,message=FALSE}\nGrandtotal <- read.csv(\"~/LastBat/Grandtotal.csv\")\nGrandtotal <- Grandtotal[,-1]\n\nsampling.cov<- Grandtotal[,53:83]\nsampling.cov <- sampling.cov[,-c(7,8,17:22)]\npreprocov <-preProcess(sampling.cov, method = c(\"center\",\"scale\"))\nsampling.cov<-predict(preprocov, sampling.cov)\n\nDailycov <- Grandtotal[,84:110]\n\n\npreproDaily <-preProcess(Dailycov, method = c(\"center\",\"scale\"))\nDailycov<-predict(preproDaily, Dailycov)\n\nJulian<-Dailycov[,1:3]\nMax.hum<-Dailycov[,4:6]\nMax.temp<-Dailycov[,7:9]\nMean.hum<-Dailycov[,10:12]\nMean.temp<-Dailycov[,13:15]\nMin.hum<-Dailycov[,16:18]\nMin.temp<-Dailycov[,19:21]\nSd.hum<-Dailycov[,22:24]\nSd.temp<-Dailycov[,25:27]\n\nDailycov<- list(Julian,Max.hum, Max.temp, Mean.hum,Mean.temp, Min.hum, Min.temp, Sd.hum, Sd.temp)\nnames(Dailycov) <- c(\"Julian\", \"Maxhum\",\"Maxtemp\",\"Meanhum\", \"Meantemp\",\"Minhum\",\"Mintemp\",\"sdhum\",\"sdtemp\")\n\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE}\n\nplot(Predictors)\n#Pred.DF<-as.data.frame(Predictors)\n#Pred.DF<-predict(preprocov, new=Pred.DF)\n\n#Distance.to.water <- PNF  # this will be the template\n#Distance.to.water[] <- NA \n#values(Distance.to.water)<-Pred.DF[,1]\n\n#Distance.to.road <- PNF  # this will be the template\n#Distance.to.road[] <- NA \n#values(Distance.to.road)<-Pred.DF[,2]\n\n#Existing.vegetation <- PNF  # this will be the template\n#Existing.vegetation[] <- NA \n#values(Existing.vegetation)<-Pred.DF[,3]\n\n#Altitude <- PNF  # this will be the template\n#Altitude[] <- NA \n#values(Altitude)<-Pred.DF[,4]\n     \n#Burn.intensity.soil <- PNF  # this will be the template\n#Burn.intensity.soil[] <- NA \n#values(Burn.intensity.soil)<-Pred.DF[,5]\n\n#Burn.intensity.Canopy <- PNF  # this will be the template\n#Burn.intensity.Canopy[] <- NA \n#values(Burn.intensity.Canopy)<-Pred.DF[,6]\n\n#Burn.intensity.basal <- PNF  # this will be the template\n#Burn.intensity.basal[] <- NA \n#values(Burn.intensity.basal)<-Pred.DF[,7]\n\n#fire_dist <- PNF  # this will be the template\n#fire_dist[] <- NA \n#values(fire_dist)<-Pred.DF[,8]\n\n#forest_dist <- PNF  # this will be the template\n#forest_dist[] <- NA \n#values(forest_dist)<-Pred.DF[,9]\n\n#Predictors <-stack(Distance.to.water, Distance.to.road, Existing.vegetation, Altitude, Burn.intensity.soil,Burn.intensity.Canopy, Burn.intensity.basal, fire_dist, forest_dist)\n#names(Predictors)<-c(\"Distance to water\", \"Distance to road\",\"Existing vegetation\",\"Altitude\", \"Burn intensity soil\",\"Burn intensity Canopy\", \"Burn intensity basal\", \"fire_dist\", \"forest_dist\")\n\n```\n\n#Results collected in the field \n\n\n\n#Maps showing the sampled Points\n\n\n#Results of species prescence\n\nIn this area 0 means absence, and 1 means prescence. This table has for each site (ID), every specie and day, so for example if Mylu1=0, that means that for *Myotis lucifugus* (common name Little Brown bat, was detected on day one for that particular site).\n\n##Here is a key for bat species\n\n- *Myotis yumanensis* (Myyu)\n- *Myotis californicus* (Myca)\n- *Myotis ciliolabrum* (Myci)\n- *Myotis volans* (Myvo)\n- *Myotis lucifugus* (Mylu)\n- *Parastrellus hesperus* (Pahe)\n- *Lasiurus blossevillii* (Labo)\n- *Myotis evotis* (Myev)\n- *Antrozous pallidus*  **(Anpa)**\n- *Eptesicus fuscus* (Epfu)\n- *Lasionycteris noctivagans* (Lano)\n- *Myotis thysanodes* **(Myth)**\n- *Tadarida brasiliensis* (Tabr)\n- *Lasiurus cinereus* (Laci)\n- *Corynorhinus townsendii* **(Coto)**\n- *Euderma maculatum* (Euma)\n- *Eumops perotis* (Eupe)\n\n```{r,echo=FALSE, warning=FALSE,message=FALSE}\nBatOccu <- Grandtotal[,2:52]\n```\n\n#Maps predicting the distribution of bats\n\n##Yuma myotis (*Myotis yumanensis*)\n\n```{r, echo=FALSE,message=FALSE}\nlibrary(unmarked)\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results=\"asis\"}\n#N=49a\nBatOccuMyYu<-BatOccu[,2:4]\n\nSimOccuMyYu2<-unmarkedFrameOccu(y = BatOccuMyYu, siteCovs =sampling.cov, obsCovs=Dailycov)\n\n# Fit model with psi held constant\nmodel.Occu1.My.Yu2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp~  1, SimOccuMyYu2)\n\nselect.My.Yu2 <- dredge(model.Occu1.My.Yu2, rank = \"AICc\")\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Yu2, delta <= 1, recalc.weights = FALSE)))\n\nmodel.Occu1.My.Yu2 <- occu(~ Meantemp ~ Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist,SimOccuMyYu2)\n\nselect.My.Yu2 <- dredge(model.Occu1.My.Yu2, rank = \"AICc\", subset= !(  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`)& `p(Meantemp)`)\n\nbest2.My.Yu2<-get.models(select.My.Yu2, 1)[[1]]\n#Occu1.layer.MyYu2 <- predict(best2.My.Yu2, type = \"state\", newdata=Predictors)\n\n#brks= c(0, 0.1, 0.2, 0.3, 0.4,0.5, 0.6,0.7, 0.8,0.9, 1)\n#cols <- rev(terrain.colors(10))\n#Occu1.layer.MyYu2<-Occu1.layer.MyYu2*PNF\n#plot(Occu1.layer.MyYu2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Yuma Myotis\",breaks=brks, lab.breaks=brks, col=cols, zlim=c(0,1))\n\n#library(texreg)\nhtmlreg(extract(subset(select.My.Yu2, delta <= 2, recalc.weights = TRUE)), file = \"myyu.doc\")\n\nhtmlreg(extract(subset(select.My.Yu2, delta <= 2, recalc.weights = TRUE)))\n```",
    "created" : 1472158023936.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1103908213",
    "id" : "24E32A13",
    "lastKnownWriteTime" : 1472159492,
    "last_content_update" : 1472159492566,
    "path" : "~/LastBat/firesummary.Rmd",
    "project_path" : "firesummary.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}