{
    "collab_server" : "",
    "contents" : "setwd(\"C:/Users/corcoranbarriosd/Documents/LastBat/Audiob2016\")\n\n\n###list og batchsummaryfiles\nID.of.files<-gsub(\"i\", \"\",substr(grep(\"BatchSummary\", list.files(recursive = T), value=TRUE), 1, 7))\nID.of.files<-gsub(\"I\", \"\", ID.of.files)\nID.of.files<-gsub(\"/\", \"\", ID.of.files)\n\n##Extract the batchsummaryfiles night number\nyap <- strsplit(grep(\"BatchSummary\", list.files(recursive = T), value=TRUE), \"/\")\nRates <- sapply(yap, \"[\", 2)\nnum <- as.numeric(gsub(\"^.*[Nn].*([0-9]+).*$\", \"\\\\1\", Rates))\n#name the files acording to ID and night number\norder.of.files <- paste(ID.of.files, num, sep = \"n\")\n\nab <- list()\n\nfor (i in 1:length(grep(\"BatchSummary\", list.files(recursive = T), value=TRUE))){\n  #read all files\n  ab[[i]]<-read.delim(grep(\"BatchSummary\", list.files(recursive = T), value=TRUE)[[i]], comment.char=\"#\")[1:2,-19]\n  #acces the consensus only\n  ab[[i]] <- ab[[i]][-1,-1]\n  #turn values to 1 and 0 for presence absense\n  ab[[i]] <- data.frame(ifelse(ab[[i]] == 0, 0, 1))\n  #add the id according to each row\n  ab[[i]]$ID <- order.of.files[i]\n}\n\n#transform the previus list into a dataframe\ndf <- do.call(\"rbind\", ab)\n\n\n\n\n#select n1 values\n\nstr(df[grepl(\"n3\",df[,18]),])\n\nBatOccu2<- data.frame(ID = unique(ID.of.files), Myyu1 = df[grepl(\"n1\",df[,18]),1], Myyu2 = df[grepl(\"n2\",df[,18]),1], Myyu3 = df[grepl(\"n3\",df[,18]),1], \n                                                Myca1 = df[grepl(\"n1\",df[,18]),2], Myca2 = df[grepl(\"n2\",df[,18]),2], Myca3 = df[grepl(\"n3\",df[,18]),2],\n                                                Myci1 = df[grepl(\"n1\",df[,18]),3], Myci2 = df[grepl(\"n2\",df[,18]),3], Myci3 = df[grepl(\"n3\",df[,18]),3],\n                                                Myvo1 = df[grepl(\"n1\",df[,18]),4], Myvo2 = df[grepl(\"n2\",df[,18]),4], Myvo3 = df[grepl(\"n3\",df[,18]),4], \n                                                Mylu1 = df[grepl(\"n1\",df[,18]),5], Mylu2 = df[grepl(\"n2\",df[,18]),5], Mylu3 = df[grepl(\"n3\",df[,18]),5],\n                                                Pahe1 = df[grepl(\"n1\",df[,18]),6], Pahe2 = df[grepl(\"n2\",df[,18]),6], Pahe3 = df[grepl(\"n3\",df[,18]),6],\n                                                Labl1 = df[grepl(\"n1\",df[,18]),7], Labl2 = df[grepl(\"n2\",df[,18]),7], Labl3 = df[grepl(\"n3\",df[,18]),7],\n                                                Myev1 = df[grepl(\"n1\",df[,18]),8], Myev2 = df[grepl(\"n2\",df[,18]),8], Myev3 = df[grepl(\"n3\",df[,18]),8], \n                                                Anpa1 = df[grepl(\"n1\",df[,18]),9], Anpa2 = df[grepl(\"n2\",df[,18]),9], Anpa3 = df[grepl(\"n3\",df[,18]),9],\n                                                Epfu1 = df[grepl(\"n1\",df[,18]),10], Epfu2 = df[grepl(\"n2\",df[,18]),10], Epfu3 = df[grepl(\"n3\",df[,18]),10],\n                                                Lano1 = df[grepl(\"n1\",df[,18]),11], Lano2 = df[grepl(\"n2\",df[,18]),11], Lano3 = df[grepl(\"n3\",df[,18]),11],\n                                                Myth1 = df[grepl(\"n1\",df[,18]),12], Myth2 = df[grepl(\"n2\",df[,18]),12], Myth3 = df[grepl(\"n3\",df[,18]),12],\n                                                Tabr1 = df[grepl(\"n1\",df[,18]),13], Tabr2 = df[grepl(\"n2\",df[,18]),13], Tabr3 = df[grepl(\"n3\",df[,18]),13],\n                                                Laci1 = df[grepl(\"n1\",df[,18]),14], Laci2 = df[grepl(\"n2\",df[,18]),14], Laci3 = df[grepl(\"n3\",df[,18]),14], \n                                                Coto1 = df[grepl(\"n1\",df[,18]),15], Coto2 = df[grepl(\"n2\",df[,18]),15], Coto3 = df[grepl(\"n3\",df[,18]),15],\n                                                Euma1 = df[grepl(\"n1\",df[,18]),16], Euma2 = df[grepl(\"n2\",df[,18]),16], Euma3 = df[grepl(\"n3\",df[,18]),16],\n                                                Eupe1 = df[grepl(\"n1\",df[,18]),17], Eupe2 = df[grepl(\"n2\",df[,18]),17], Eupe3 = df[grepl(\"n3\",df[,18]),17])\n\n\nBatOccu <- read.csv(\"~/new_bats/Rnew_bats/BatOccu.csv\")\n\nBatOccu <- rbind(BatOccu, BatOccu2)\n\npresence <- function (pres, spp) \n{\n  secuencia <- c(1:spp) * (ncol(pres)/spp)\n  secuencia2 <- secuencia - (secuencia[1] - 1)\n  presabs <- list()\n  data <- list()\n  n <- list()\n  for (i in 1:length(secuencia)) {\n    data[[i]] <- c(secuencia2[i]:secuencia[i])\n    data[[i]] <- pres[, data[[i]]]\n    presabs[[i]] <- rowSums(data[[i]], na.rm = TRUE)\n    presabs[[i]] <- ifelse(presabs[[i]] > 0, 1, 0)\n    presabs = as.data.frame(presabs)\n    colnames(presabs) = paste(\"species\", c(1:ncol(presabs)), sep = \".\")\n    n <- colSums(presabs)\n    \n  }\n  \n  result <- list(presabs = presabs, n = n)\n  return(result)\n}\n\na<-presence(BatOccu[,-1], 17)\nnumber.per.site<-a$n\n\nnames(number.per.site) <- c(\"Myyu\",\"Myca\",\"Myci\",\"Myvo\",\"Mylu\",\"Pahe\",\"Labo\",\"Myev\",\"Anpa\",\"Epfu\",\"Lano\",\"Myth\",\"Tabr\",\"Laci\",\"Coto\",\"Euma\",\"Eupe\")\n\n##### basal Area \n\nBasalArea <- read.csv(\"~/Jacqui/BasalArea.csv\")\n\nlibrary(dplyr)\nBasalArea<-mutate(BasalArea, Area = (((DIAMETER*0.01)/2)^2)*pi)\nBasalArea<-summarise(group_by(BasalArea, ID), AreaPerHa=sum(Area)*10, Average = mean(Area), Sd = sd(Area, na.rm = TRUE), count = n())\nBasalArea[is.na(BasalArea)] <- 0\n\n####Results\nRESULTS <- read.csv(\"~/Jacqui/RESULTS.csv\")\nRESULTS <- mutate(RESULTS, CANOPY.COVER=((1.04*CANOPY.COVER.N)+(1.04*CANOPY.COVER.E)+(1.04*CANOPY.COVER.W)+(1.04*CANOPY.COVER.S)+(CANOPY.COVER.C*1.04))/5)\nRESULTS<-RESULTS[,-c(6:10)]\n\nRESULTS <- mutate(RESULTS, WOODY= 100*((WOOD.N+WOOD.E+WOOD.S+WOOD.W)/(4*length(RESULTS[,1]))))\nRESULTS<-RESULTS[,-c(6:9)]\n\nRESULTS <- mutate(RESULTS, HERBACIOUS= 100*((HERB.N+HERB.E+HERB.S+HERB.W)/(4*length(RESULTS[,1]))))\nRESULTS<-RESULTS[,-c(6:9)]\n\nRESULTS <- mutate(RESULTS, GRASS= 100*((GRASS.N+GRASS.E+GRASS.S+GRASS.W)/(4*length(RESULTS[,1]))))\nRESULTS<-RESULTS[,-c(6:9)]\n\nRESULTS <- mutate(RESULTS, NAKED.SOIL= 100*((NAKED.SOIL.N+NAKED.SOIL.E+NAKED.SOIL.S+NAKED.SOIL.W)/(4*length(RESULTS[,1]))))\nRESULTS<-RESULTS[,-c(6:9)]\n\nRESULTS <- mutate(RESULTS, ROCKY= 100*((ROCKY.SCREE.N+ROCKY.SCREE.E+ROCKY.SCREE.S+ROCKY.SCREE.W)/(4*length(RESULTS[,1]))))\nRESULTS<-RESULTS[,-c(6:9)]\n\nRESULTS <- mutate(RESULTS, DOWN.WOOD= 100*((DOWN.WOOD.N+DOWN.WOOD.E+DOWN.WOOD.S+DOWN.WOOD.W)/(4*length(RESULTS[,1]))))\nRESULTS<-RESULTS[,-c(6:9)]\n\nRESULTS <- mutate(RESULTS, LEAF.LITTER= 100*((LEAF.LITTER.N+LEAF.LITTER.E+LEAF.LITTER.S+LEAF.LITTER.W)/(4*length(RESULTS[,1]))))\nRESULTS<-RESULTS[,-c(6:9)]\n\n##### Join databases\n\ntotal <- merge(BatOccu,BasalArea,by=\"ID\", all = TRUE)\n\ntotal <- merge(total,RESULTS,by=\"ID\", all = TRUE)\n\n\n\n\n######TempHum\n\n\nsetwd(\"C:/Users/corcoranbarriosd/Documents/LastBat/T&H\")\n#get the name of all humidity files\nHumname <- list.files(pattern=\"*Hum.csv\")\n#read all the humidity files\nHumfiles <- lapply(Humname, read.csv)\n#change humname to be the ID of the site\nHumname <- gsub(\"Hum.csv\",x =  Humname, \"\")\n#Add the ID of the site to the Humfiles\nfor (i in 1:length(Humfiles)){\n  Humfiles[[i]]$ID <- rep(Humname[i], times = nrow(Humfiles[[i]]))\n}\n\n\nTemname <- list.files(pattern=\"*Tem.csv\")\nTemfiles <- lapply(Temname, read.csv)\nTemname <- gsub(\"Tem.csv\",x =  Temname, \"\")\nfor (i in 1:length(Temfiles)){\n  Temfiles[[i]]$ID <- rep(Temname[i], times = nrow(Temfiles[[i]]))\n}\nsetwd(\"C:/Users/corcoranbarriosd/Documents/LastBat\")\n\n\n####Get your dates right\n\nlibrary(lubridate)\n\nfor (i in 1:length(Temfiles)){\n  Temfiles[[i]]$Date.Time <- dmy_hms(as.character(Temfiles[[i]]$Date.Time), truncated = 1)\n\n}\n\nTemfiles <- do.call(\"rbind\", Temfiles)\n\nfor (i in 1:length(Humfiles)){\n  Humfiles[[i]]$Date.Time <- dmy_hms(as.character(Humfiles[[i]]$Date.Time), truncated = 1)\n  \n}\n\nHumfiles <- do.call(\"rbind\", Humfiles)\n\ntotal$START.DATE <- mdy(as.character(total$START.DATE))\n\ntotal$END.DATE <- mdy(as.character(total$END.DATE))\n\ntotal$Start.1 <- total$START.DATE\ntotal$End.1 <- total$END.DATE - days (2)\ntotal$Start.2 <- total$Start.1 + days (1)\ntotal$End.2 <- total$End.1 + days (1)\ntotal$Start.3 <- total$Start.2 + days (1)\ntotal$End.3 <- total$End.2 + days (1)\n\n#filter by dates\n#DAY1\nHumsummaryday1 <- list()\n\nfor (i in 1:length(total$ID)){\n  Humsummaryday1[[i]] <- Humfiles %>%   filter(Humfiles$ID == total$ID[i]) %>% filter(Date.Time >= (total$Start.1[i]+ hours(19) + minutes(30))) %>% filter(Date.Time <= (total$End.1[i]+ hours(6)+ minutes(30)))  \n}\n\nHumsummaryday1 <- do.call(\"rbind\", Humsummaryday1)\nHumsummaryday1 <- summarise(group_by(Humsummaryday1, ID), meanhum1 = mean(Value), maxhum1 = max(Value), minhum1 = min(Value), sdhum1 = sd(Value),Julian1 = mean(as.numeric(julian(Date.Time, origin = ymd(\"2015-01-01\")))))\nHumsummaryday1$Julian1 <- ifelse(Humsummaryday1$Julian1 > 365, (Humsummaryday1$Julian1 - 365), Humsummaryday1$Julian1)\n\n#Day2\n\nHumsummaryday2 <- list()\n\nfor (i in 1:length(total$ID)){\n  Humsummaryday2[[i]] <- Humfiles %>%   filter(Humfiles$ID == total$ID[i]) %>% filter(Date.Time >= (total$Start.2[i]+ hours(19) + minutes(30))) %>% filter(Date.Time <= (total$End.2[i]+ hours(6)+ minutes(30)))  \n}\n\nHumsummaryday2 <- do.call(\"rbind\", Humsummaryday2)\nHumsummaryday2 <- summarise(group_by(Humsummaryday2, ID), meanhum2 = mean(Value), maxhum2 = max(Value), minhum2 = min(Value), sdhum2 = sd(Value),Julian2 = mean(as.numeric(julian(Date.Time, origin = ymd(\"2015-01-01\")))))\nHumsummaryday2$Julian2 <- ifelse(Humsummaryday2$Julian2 > 365, (Humsummaryday2$Julian2 - 365), Humsummaryday2$Julian2)\n\n\nHumsummary <- merge(Humsummaryday1, Humsummaryday2, by = \"ID\")\n\n#Day3\n\nHumsummaryday3 <- list()\n\nfor (i in 1:length(total$ID)){\n  Humsummaryday3[[i]] <- Humfiles %>%   filter(Humfiles$ID == total$ID[i]) %>% filter(Date.Time >= (total$Start.3[i]+ hours(19) + minutes(30))) %>% filter(Date.Time <= (total$End.3[i]+ hours(6)+ minutes(30)))  \n}\n\n\n\nHumsummaryday3 <- do.call(\"rbind\", Humsummaryday3)\n\nHumsummaryday3 <- summarise(group_by(Humsummaryday3, ID), meanhum3 = mean(Value), maxhum3 = max(Value), minhum3 = min(Value), sdhum3 = sd(Value),Julian3 = mean(as.numeric(julian(Date.Time, origin = ymd(\"2015-01-01\")))))\nHumsummaryday3$Julian3 <- ifelse(Humsummaryday3$Julian3 > 365, (Humsummaryday3$Julian3 - 365), Humsummaryday3$Julian3)\nHumsummary <- merge(Humsummary, Humsummaryday3, by = \"ID\")\n######Temperature\n\nTemsummaryday1 <- list()\n\nfor (i in 1:length(total$ID)){\n  Temsummaryday1[[i]] <- Temfiles %>%   filter(Temfiles$ID == total$ID[i]) %>% filter(Date.Time >= (total$Start.1[i]+ hours(19) + minutes(30))) %>% filter(Date.Time <= (total$End.1[i]+ hours(6)+ minutes(30)))  \n}\n\nTemsummaryday1 <- do.call(\"rbind\", Temsummaryday1)\nTemsummaryday1 <- summarise(group_by(Temsummaryday1, ID), meanTem1 = mean(Value), maxTem1 = max(Value), minTem1 = min(Value), sdTem1 = sd(Value))\n\n#Day2\n\nTemsummaryday2 <- list()\n\nfor (i in 1:length(total$ID)){\n  Temsummaryday2[[i]] <- Temfiles %>%   filter(Temfiles$ID == total$ID[i]) %>% filter(Date.Time >= (total$Start.2[i]+ hours(19) + minutes(30))) %>% filter(Date.Time <= (total$End.2[i]+ hours(6)+ minutes(30)))  \n}\n\nTemsummaryday2 <- do.call(\"rbind\", Temsummaryday2)\nTemsummaryday2 <- summarise(group_by(Temsummaryday2, ID), meanTem2 = mean(Value), maxTem2 = max(Value), minTem2 = min(Value), sdTem2 = sd(Value))\n\nTemsummary <- merge(Temsummaryday1, Temsummaryday2, by = \"ID\")\n\n#Day3\n\nTemsummaryday3 <- list()\n\nfor (i in 1:length(total$ID)){\n  Temsummaryday3[[i]] <- Temfiles %>%   filter(Temfiles$ID == total$ID[i]) %>% filter(Date.Time >= (total$Start.3[i]+ hours(19) + minutes(30))) %>% filter(Date.Time <= (total$End.3[i]+ hours(6)+ minutes(30)))  \n}\n\n\n\nTemsummaryday3 <- do.call(\"rbind\", Temsummaryday3)\n\nTemsummaryday3 <- summarise(group_by(Temsummaryday3, ID), meanTem3 = mean(Value), maxTem3 = max(Value), minTem3 = min(Value), sdTem3 = sd(Value))\nTemsummary <- merge(Temsummary, Temsummaryday3, by = \"ID\")\n\n#Add all together\n\nTemHumSummary <- merge(Temsummary, Humsummary, by = \"ID\")\n\n#Order by name\nTemHumSummary <- TemHumSummary[ , order(names(TemHumSummary))]\nlibrary(raster)\nlibrary(rgdal)\nPredictors_Stack <- readRDS(\"Predictors_Stack.rds\")\n\ntotal <- cbind(total, extract(Predictors_Stack,total[,58:57]))\n\n#Grandtotal\n\nGrandtotal <- merge(total, TemHumSummary, by = \"ID\", all = TRUE)\n\nwrite.csv(Grandtotal, \"Grandtotal.csv\")\n",
    "created" : 1472156035713.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2301796175",
    "id" : "B002370B",
    "lastKnownWriteTime" : 1472156346,
    "last_content_update" : 1472156346611,
    "path" : "~/LastBat/BattOccumake.R",
    "project_path" : "BattOccumake.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}