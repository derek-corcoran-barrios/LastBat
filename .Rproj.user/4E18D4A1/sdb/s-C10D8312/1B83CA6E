{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Fire_summary\"\nauthor: \"Derek Corcoran\"\ndate: \"November 9, 2015\"\noutput: html_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(cache=FALSE)\n```\n\n#Abstract\n\nThis webpage will show the results of a bat survey study done in the Plumas National Forest in North California. The objective of this study is to determine the distribution of the different species of bats within the park. In order to do that we have performed occupancy models for the species present in the park. The results of this models will be shown as maps showing the probability of occurence of bats in each point, that is, if you see a value of 1, there is a 100% chance of finding a bat in that point, if there is a value of 0 there is 0% chance of finding that specie in that point, if there is a value of 0.5 there is a 50% chance of finding that specie in that point.\n\nAnother result\n\n```{r, message=FALSE, warning=FALSE, echo=FALSE,results='hide'}\n#first load libraries\nlibrary(raster)\nlibrary(rasterVis)\nlibrary(maps)\nlibrary(maptools)\nlibrary(rgdal)\nlibrary(latticeExtra)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(unmarked)\nlibrary(lubridate)\nlibrary(jpeg)\nlibrary(stargazer)\nlibrary(xtable)\nlibrary(MuMIn)\nlibrary(ggplot2)\nlibrary(RCurl)\nlibrary(foreign)\nlibrary(caret)\nlibrary(AICcmodavg)\n```\n\n```{r,echo=FALSE,warning=FALSE,message=FALSE,results='hide', cache=TRUE}\nPredictors_Stack <- readRDS(\"Predictors_Stack.rds\")\nplot(Predictors)\n```\n\n```{r,echo=FALSE, warning=FALSE,message=FALSE}\nGrandtotal <- read.csv(\"~/LastBat/Grandtotal.csv\")\nGrandtotal <- Grandtotal[,-1]\n\nsampling.cov<- Grandtotal[,53:83]\nsampling.cov <- sampling.cov[,-c(7,8,17:22)]\npreprocov <-preProcess(sampling.cov, method = c(\"center\",\"scale\"))\nsampling.cov<-predict(preprocov, sampling.cov)\n\nDailycov <- Grandtotal[,84:110]\n\n\npreproDaily <-preProcess(Dailycov, method = c(\"center\",\"scale\"))\nDailycov<-predict(preproDaily, Dailycov)\n\nJulian<-Dailycov[,1:3]\nMax.hum<-Dailycov[,4:6]\nMax.temp<-Dailycov[,7:9]\nMean.hum<-Dailycov[,10:12]\nMean.temp<-Dailycov[,13:15]\nMin.hum<-Dailycov[,16:18]\nMin.temp<-Dailycov[,19:21]\nSd.hum<-Dailycov[,22:24]\nSd.temp<-Dailycov[,25:27]\n\nDailycov<- list(Julian,Max.hum, Max.temp, Mean.hum,Mean.temp, Min.hum, Min.temp, Sd.hum, Sd.temp)\nnames(Dailycov) <- c(\"Julian\", \"Maxhum\",\"Maxtemp\",\"Meanhum\", \"Meantemp\",\"Minhum\",\"Mintemp\",\"sdhum\",\"sdtemp\")\n\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE}\n\nplot(Predictors)\nPred.DF<-as.data.frame(Predictors)\nPred.DF<-predict(preprocov, new=Pred.DF)\n\nDistance.to.water <- PNF  # this will be the template\nDistance.to.water[] <- NA \nvalues(Distance.to.water)<-Pred.DF[,1]\n\nDistance.to.road <- PNF  # this will be the template\nDistance.to.road[] <- NA \nvalues(Distance.to.road)<-Pred.DF[,2]\n\nExisting.vegetation <- PNF  # this will be the template\nExisting.vegetation[] <- NA \nvalues(Existing.vegetation)<-Pred.DF[,3]\n\nAltitude <- PNF  # this will be the template\nAltitude[] <- NA \nvalues(Altitude)<-Pred.DF[,4]\n     \nBurn.intensity.soil <- PNF  # this will be the template\nBurn.intensity.soil[] <- NA \nvalues(Burn.intensity.soil)<-Pred.DF[,5]\n\nBurn.intensity.Canopy <- PNF  # this will be the template\nBurn.intensity.Canopy[] <- NA \nvalues(Burn.intensity.Canopy)<-Pred.DF[,6]\n\nBurn.intensity.basal <- PNF  # this will be the template\nBurn.intensity.basal[] <- NA \nvalues(Burn.intensity.basal)<-Pred.DF[,7]\n\nfire_dist <- PNF  # this will be the template\nfire_dist[] <- NA \nvalues(fire_dist)<-Pred.DF[,8]\n\nforest_dist <- PNF  # this will be the template\nforest_dist[] <- NA \nvalues(forest_dist)<-Pred.DF[,9]\n\nPredictors <-stack(Distance.to.water, Distance.to.road, Existing.vegetation, Altitude, Burn.intensity.soil,Burn.intensity.Canopy, Burn.intensity.basal, fire_dist, forest_dist)\nnames(Predictors)<-c(\"Distance to water\", \"Distance to road\",\"Existing vegetation\",\"Altitude\", \"Burn intensity soil\",\"Burn intensity Canopy\", \"Burn intensity basal\", \"fire_dist\", \"forest_dist\")\n\n```\n\n#Results collected in the field \n\n\n```{r, echo=FALSE}\nplot(Predictors)\n```\n\n#Maps showing the sampled Points\n\n```{r,echo=FALSE, warning=FALSE,message=FALSE}\nplot(PNF, legend=FALSE)\npoints(RESULTS$LONG, RESULTS$LAT, cex=0.5)\nmap.scale(-120.7, 39.5, relwidth = 0.15, metric = TRUE, ratio = FALSE,cex=0.7)\nCoordinates <- data.frame(RESULTS$LONG, RESULTS$LAT)\ncolnames(Coordinates) <- c(\"lon\", \"lat\")\n```\n\n#Results of species prescence\n\nIn this area 0 means absence, and 1 means prescence. This table has for each site (ID), every specie and day, so for example if Mylu1=0, that means that for *Myotis lucifugus* (common name Little Brown bat, was detected on day one for that particular site).\n\n##Here is a key for bat species\n\n- *Myotis yumanensis* (Myyu)\n- *Myotis californicus* (Myca)\n- *Myotis ciliolabrum* (Myci)\n- *Myotis volans* (Myvo)\n- *Myotis lucifugus* (Mylu)\n- *Parastrellus hesperus* (Pahe)\n- *Lasiurus blossevillii* (Labo)\n- *Myotis evotis* (Myev)\n- *Antrozous pallidus*  **(Anpa)**\n- *Eptesicus fuscus* (Epfu)\n- *Lasionycteris noctivagans* (Lano)\n- *Myotis thysanodes* **(Myth)**\n- *Tadarida brasiliensis* (Tabr)\n- *Lasiurus cinereus* (Laci)\n- *Corynorhinus townsendii* **(Coto)**\n- *Euderma maculatum* (Euma)\n- *Eumops perotis* (Eupe)\n\n```{r,echo=FALSE, warning=FALSE,message=FALSE}\nBatOccu <- Grandtotal[,2:52]\n```\n\n#Maps predicting the distribution of bats\n\n##Yuma myotis (*Myotis yumanensis*)\n\n```{r, echo=FALSE,message=FALSE}\nlibrary(unmarked)\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results=\"asis\"}\n#N=49a\nBatOccuMyYu<-BatOccu[,2:4]\n\nSimOccuMyYu2<-unmarkedFrameOccu(y = BatOccuMyYu, siteCovs =sampling.cov, obsCovs=Dailycov)\n\n# Fit model with psi held constant\nmodel.Occu1.My.Yu2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp~  1, SimOccuMyYu2)\n# Find the best detection model\n#(d2 <- dredge(ufm.mallard, rank = AIC))\n# keep date and date^2 in comparisons (#2 model from above)\n#(d2 <- dredge(ufm.mallard.global, rank = AIC,subset=`p(date)`&`p(I(date^2))`))\n\nselect.My.Yu2 <- dredge(model.Occu1.My.Yu2, rank = \"AICc\")\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Yu2, delta <= 1, recalc.weights = FALSE)))\n\nmodel.Occu1.My.Yu2 <- occu(~ 1 ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist,SimOccuMyYu2)\n\nselect.My.Yu2 <- dredge(model.Occu1.My.Yu2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`))\n\nbest2.My.Yu2<-get.models(select.My.Yu2, 1)[[1]]\nOccu1.layer.MyYu2 <- predict(best2.My.Yu2, type = \"state\", newdata=Predictors)\n\nbrks= c(0, 0.1, 0.2, 0.3, 0.4,0.5, 0.6,0.7, 0.8,0.9, 1)\ncols <- rev(terrain.colors(10))\nOccu1.layer.MyYu2<-Occu1.layer.MyYu2*PNF\nplot(Occu1.layer.MyYu2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Yuma Myotis\",breaks=brks, lab.breaks=brks, col=cols, zlim=c(0,1))\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Yu2, delta <= 2, recalc.weights = TRUE)), file = \"myyu.doc\")\n```\n\n\n##California bat (*Myotis californicus*)\n\n\n```{r, echo=FALSE,message=FALSE}\nlibrary(unmarked)\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\nBatOccuMyCa<-BatOccu[,5:7]\n```\n\n###Total model\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results=\"asis\"}\n#N=49\n\nSimOccuMyCa2<-unmarkedFrameOccu(y = BatOccuMyCa, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.My.Ca2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp~  1, SimOccuMyCa2)\n\nselect.My.Ca2 <- dredge(model.Occu1.My.Ca2, rank = \"AICc\")\n\n#(d2 <- dredge(ufm.mallard.global, rank = AIC,subset=`p(date)`&`p(I(date^2))`))\n\nmodel.Occu1.My.Ca2 <- occu(~ Minhum + sdhum ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuMyCa2)\n\nselect.My.Ca2 <- dredge(model.Occu1.My.Ca2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`) & `p(Minhum)`&`p(sdhum)`)\n\nbest2.My.Ca2<-get.models(select.My.Ca2, 1)[[1]]\nOccu1.layer.MyCa2 <- predict(best2.My.Ca2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.MyCa2<-Occu1.layer.MyCa2*PNF\nplot(Occu1.layer.MyCa2$layer.1, colNA=\"black\", main=\"Occupancy estimation for California Bat\",breaks=brks, col=cols,lab.breaks=brks, zlim=c(0,1))\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Ca2, delta <= 2, recalc.weights = TRUE)), file = \"myca.doc\")\n```\n\n\n##Western Small Footed Myotis (*Myotis ciliolabrum*)\n\n```{r, echo=FALSE,message=FALSE, results='asis'}\nlibrary(unmarked)\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\nBatOccuMyCi<-BatOccu[,8:10]\n\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results=\"asis\"}\n#N=49\nSimOccuMyCi2<-unmarkedFrameOccu(y = BatOccuMyCi, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.My.Ci2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp~  1, SimOccuMyCi2)\n\nselect.My.Ci2 <- dredge(model.Occu1.My.Ci2, rank = \"AICc\")\n\nmodel.Occu1.My.Ci2 <- occu(~ Maxtemp + Mintemp + sdtemp + Meantemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuMyCi2)\n\nselect.My.Ci2 <- dredge(model.Occu1.My.Ci2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`) & `p(Maxtemp)`&`p(Mintemp)`&`p(sdtemp)`&`p(Meantemp)`)\n\nbest2.My.Ci2<-get.models(select.My.Ci2, 1)[[1]]\nOccu1.layer.MyCi2 <- predict(best2.My.Ci2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.MyCi2<-Occu1.layer.MyCi2*PNF\nplot(Occu1.layer.MyCi2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Western Small Footed Myotis\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Ci2, delta <= 2, recalc.weights = TRUE)), file = \"myci.doc\")\n```\n\n\n##Hairy-winged bat (*Myotis volans*)\n\n```{r, echo=FALSE,message=FALSE}\nlibrary(unmarked)\n```\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\n\nBatOccuMyVo<-BatOccu[,11:13]\n```\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results=\"asis\"}\n#N=49\nSimOccuMyVo2<-unmarkedFrameOccu(y = BatOccuMyVo, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.My.Vo2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp~  1, SimOccuMyVo2)\n\nselect.My.Vo2 <- dredge(model.Occu1.My.Vo2, rank = \"AICc\")\n\n\n\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Vo2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.My.Vo2 <- occu(~ 1 ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuMyVo2)\n\nselect.My.Vo2 <- dredge(model.Occu1.My.Vo2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`))\n\nbest2.My.Vo2<-get.models(select.My.Vo2, 1)[[1]]\n\nOccu1.layer.MyVo2 <- predict(best2.My.Vo2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.MyVo2<-Occu1.layer.MyVo2*PNF\nplot(Occu1.layer.MyVo2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Hairy-winged bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Vo2, delta <= 2, recalc.weights = TRUE)), file = \"myvo.doc\")\n\n```\n\n##Little Brown bat (*Myotis lucifugus*)\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\nBatOccuMyLu<-BatOccu[,14:16]\n\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results=\"asis\"}\nSimOccuMyLu2<-unmarkedFrameOccu(y = BatOccuMyLu, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.My.Lu2 <-  occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp~  1, SimOccuMyLu2)\n\nselect.My.Lu2 <- dredge(model.Occu1.My.Lu2, rank = \"AICc\")\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Lu2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.My.Lu2 <- occu(~ Julian + Maxtemp + Mintemp + sdtemp + Meantemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuMyLu2)\n\nselect.My.Lu2 <- dredge(model.Occu1.My.Lu2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`) & `p(Maxtemp)`&`p(Mintemp)`&`p(sdtemp)`&`p(Meantemp)`&`p(Julian)`)\n\nbest2.My.Lu2<-get.models(select.My.Lu2, 1)[[1]]\nOccu1.layer.MyLu2 <- predict(best2.My.Lu2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.MyLu2<-Occu1.layer.MyLu2*PNF\nplot(Occu1.layer.MyLu2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Little Brown Bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\nhtmlreg(extract(subset(select.My.Lu2, delta <= 2, recalc.weights = TRUE)), file = \"mylu.doc\")\n```\n\n##Western Red Bat (*Lasiurus blossevillii*)\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\nBatOccuLaBl<-BatOccu[,20:22]\n```\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results=\"asis\"}\n#N=49\n\nSimOccuLaBl2<-unmarkedFrameOccu(y = BatOccuLaBl, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.La.Bl2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp~  1, SimOccuLaBl2)\n\nselect.La.Bl2 <- dredge(model.Occu1.La.Bl2, rank = \"AICc\")\n\nhtmlreg(extract(subset(select.La.Bl2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.La.Bl2 <- occu(~ Julian ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuLaBl2)\n\nselect.La.Bl2 <- dredge(model.Occu1.La.Bl2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`) & `p(Julian)`)\n\nbest2.La.Bl2<-get.models(select.La.Bl2, 1)[[1]]\nOccu1.layer.LaBl2 <- predict(best2.La.Bl2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.LaBl2<-Occu1.layer.LaBl2*PNF\nplot(Occu1.layer.LaBl2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Western Red Bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.La.Bl2, delta <= 2, recalc.weights = TRUE)), file = \"labl.doc\")\n```\n\n## Long-eared Bat (*Myotis evotis*)\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n\n#N=49\n\nBatOccuMyEv<-BatOccu[,23:25]\n\n```\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='asis'}\n#N=49\n\nSimOccuMyEv2<-unmarkedFrameOccu(y = BatOccuMyEv, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.My.Ev2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1, SimOccuMyEv2)\n\nselect.My.Ev2 <- dredge(model.Occu1.My.Ev2, rank = \"AICc\")\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Ev2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.My.Ev2 <- occu(~ Maxhum ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuMyEv2)\n\nselect.My.Ev2 <- dredge(model.Occu1.My.Ev2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`) & `p(Maxhum)`)\n\nbest2.My.Ev2<-get.models(select.My.Ev2, 1)[[1]]\nOccu1.layer.MyEv2 <- predict(best2.My.Ev2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.MyEv2<-Occu1.layer.MyEv2*PNF\nplot(Occu1.layer.MyEv2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Long Eared Bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Ev2, delta <= 2, recalc.weights = TRUE)), file = \"myev.doc\")\n```\n\n\n## Pallid Bat (*Antrozous pallidus*)\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\nBatOccuAnPa<-BatOccu[,26:28]\n\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='asis'}\n#N=49\n\nSimOccuAnPa2<-unmarkedFrameOccu(y = BatOccuAnPa, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.An.Pa2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1, SimOccuAnPa2)\n\nselect.An.Pa2 <- dredge(model.Occu1.An.Pa2, rank = \"AICc\")\nlibrary(texreg)\nhtmlreg(extract(subset(select.An.Pa2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.An.Pa2 <- occu(~ 1 ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuAnPa2)\n\nselect.An.Pa2 <- dredge(model.Occu1.An.Pa2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`))\n\n\n\nbest2.An.Pa2<-get.models(select.An.Pa2, 1)[[1]]\nOccu1.layer.AnPa2 <- predict(best2.An.Pa2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.AnPa2<-Occu1.layer.AnPa2*PNF\nplot(Occu1.layer.AnPa2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Pallid Bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.An.Pa2, delta <= 2, recalc.weights = TRUE)), file = \"anpa.doc\")\n```\n\n\n###Fringed Bat (*Myotis thysanoides*)\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\nBatOccuMyTh<-BatOccu[,35:37]\n\n```\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='asis'}\n#N=49\nSimOccuMyTh2<-unmarkedFrameOccu(y = BatOccuMyTh, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.My.Th2 <-occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1, SimOccuMyTh2)\n\n\nselect.My.Th2 <- dredge(model.Occu1.My.Th2, rank = \"AICc\")\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Th2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.My.Th2 <- occu(~ Julian ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuMyTh2)\n\n\nselect.My.Th2 <- dredge(model.Occu1.My.Th2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`) & `p(Julian)` )\n\nbest2.My.Th2<-get.models(select.My.Th2, 1)[[1]]\nOccu1.layer.MyTh2 <- predict(best2.My.Th2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.MyTh2<-Occu1.layer.MyTh2*PNF\nplot(Occu1.layer.MyTh2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Fringed Bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.My.Th2, delta <= 2, recalc.weights = TRUE)), file = \"myth.doc\")\n```\n\n\n##Townsend’s Long-eared Bat (*Corynorhinus townsendii*)\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\nBatOccuCoTo<-BatOccu[,44:46]\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='asis'}\n#N=49\nSimOccuCoTo2<-unmarkedFrameOccu(y = BatOccuCoTo, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.Co.To2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1, SimOccuCoTo2)\n\n\nselect.Co.To2 <- dredge(model.Occu1.Co.To2, rank = \"AICc\")\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.Co.To2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.Co.To2 <- occu(~ 1 ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuCoTo2)\n\n\nselect.Co.To2 <- dredge(model.Occu1.Co.To2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`))\n\n\nbest2.Co.To2<-get.models(select.Co.To2, 1)[[1]]\nOccu1.layer.CoTo2 <- predict(best2.Co.To2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.CoTo2<-Occu1.layer.CoTo2*PNF\nplot(Occu1.layer.CoTo2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Townsend big eared bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\n\nhtmlreg(extract(subset(select.Co.To2, delta <= 2, recalc.weights = TRUE)), file = \"coto.doc\")\n```\n\n##The western pipistrelle (*Parastrellus hesperus*)\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\nBatOccuPaHe<-BatOccu[,17:19]\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='asis'}\n#N=49\nSimOccuPaHe2<-unmarkedFrameOccu(y = BatOccuPaHe, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\n\nmodel.Occu1.Pa.He2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1, SimOccuPaHe2)\n\n\nselect.Pa.He2 <- dredge(model.Occu1.Pa.He2, rank = \"AICc\")\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.Pa.He2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.Pa.He2 <- occu(~ Julian + Meantemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuPaHe2)\n\n\nselect.Pa.He2 <- dredge(model.Occu1.Pa.He2,, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`) & `p(Julian)` & `p(Meantemp)`)\n\n\nbest2.Pa.He2<-get.models(select.Pa.He2, 1)[[1]]\nOccu1.layer.PaHe2 <- predict(best2.Pa.He2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.PaHe2<-Occu1.layer.PaHe2*PNF\nplot(Occu1.layer.PaHe2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Pipistrel\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.Pa.He2, delta <= 2, recalc.weights = TRUE)), file = \"pahe.doc\")\n```\n\n##big brown bat (*Eptesicus fuscus*)\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\nBatOccuEpFu<-BatOccu[,29:31]\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='asis'}\n#N=49\nSimOccuEpFu2<-unmarkedFrameOccu(y = BatOccuEpFu, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.Ep.Fu2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1, SimOccuEpFu2)\n\nselect.Ep.Fu2 <- dredge(model.Occu1.Ep.Fu2, rank = \"AICc\")\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.Ep.Fu2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.Ep.Fu2 <- occu(~ Maxhum + Meanhum ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuEpFu2)\n\n\nselect.Ep.Fu2 <- dredge(model.Occu1.Ep.Fu2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`) & `p(Maxhum)` & `p(Meanhum)`)\n\nbest2.Ep.Fu2<-get.models(select.Ep.Fu2, 1)[[1]]\nOccu1.layer.EpFu2 <- predict(best2.Ep.Fu2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.EpFu2<-Occu1.layer.EpFu2*PNF\nplot(Occu1.layer.EpFu2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Big Brown Bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\nlibrary(texreg)\nhtmlreg(extract(subset(select.Ep.Fu2, delta <= 2, recalc.weights = TRUE)), file = \"epfu.doc\")\n```\n\n##silver-haired bat (*Lasionycteris noctivagans*)\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n#N=49\nBatOccuLaNo<-BatOccu[,32:34]\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='asis'}\n#N=49\nSimOccuLaNo2<-unmarkedFrameOccu(y = BatOccuLaNo, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.La.No2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1, SimOccuLaNo2)\n\n\nselect.La.No2 <- dredge(model.Occu1.La.No2, rank = \"AICc\")\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.La.No2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.La.No2 <- occu(~ 1 ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuLaNo2)\n\nselect.La.No2 <- dredge(model.Occu1.La.No2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`))\n\n\nhtmlreg(extract(subset(select.La.No2, delta <= 2, recalc.weights = TRUE)))\n\nbest2.La.No2<-get.models(select.La.No2, 1)[[1]]\n\nOccu1.layer.LaNo2 <- predict(best2.La.No2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.LaNo2<-Occu1.layer.LaNo2*PNF\nplot(Occu1.layer.LaNo2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Silver Haired Bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\n#library(texreg)\nhtmlreg(extract(subset(select.La.No2, delta <= 2, recalc.weights = TRUE)), file = \"lano.doc\")\n```\n\n##Brazilian free-tailed bat (*Tadarida brasiliensis*)\n\n```{r,echo=FALSE, warning=FALSE,message=FALSE}\nBatOccuTaBr<-BatOccu[,38:40]\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='asis'}\n#N=49\nSimOccuTaBr2<-unmarkedFrameOccu(y = BatOccuTaBr, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\n\nmodel.Occu1.Ta.Br2 <-occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1,  SimOccuTaBr2)\n\nselect.Ta.Br2 <- dredge(model.Occu1.Ta.Br2, rank = \"AICc\")\n\nhtmlreg(extract(subset(select.Ta.Br2, delta <= 2, recalc.weights = TRUE)))\n\n\nmodel.Occu1.Ta.Br2 <-occu(~ Meantemp + Maxtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist,  SimOccuTaBr2)\n\nselect.Ta.Br2 <- dredge(model.Occu1.Ta.Br2,rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`) & `p(Maxtemp)` & `p(Meantemp)`)\n\n\nbest2.Ta.Br2<-get.models(select.Ta.Br2, 1)[[1]]\nOccu1.layer.TaBr2 <- predict(best2.Ta.Br2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.TaBr2<-Occu1.layer.TaBr2*PNF\nplot(Occu1.layer.TaBr2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Brazilian free-tailed bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\n#library(texreg)\nhtmlreg(extract(subset(select.Ta.Br2, delta <= 2, recalc.weights = TRUE)), file = \"tabr.doc\")\n```\n\n##hoary bat (*Lasiurus cinereus*)\n\n\n```{r,echo=FALSE, warning=FALSE,message=FALSE}\nBatOccuLaCi<-BatOccu[,41:43]\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='asis'}\n#N=49\nSimOccuLaCi2<-unmarkedFrameOccu(y = BatOccuLaCi, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.La.Ci2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1, SimOccuLaCi2)\n\n\nselect.La.Ci2 <- dredge(model.Occu1.La.Ci2, rank = \"AICc\")\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.La.Ci2, delta <= 2, recalc.weights = TRUE)))\n\n\nmodel.Occu1.La.Ci2 <- occu(~  1 ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuLaCi2)\n\n\nselect.La.Ci2 <- dredge(model.Occu1.La.Ci2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`))\n\n\nbest2.La.Ci2<-get.models(select.La.Ci2, 1)[[1]]\nOccu1.layer.LaCi2 <- predict(best2.La.Ci2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.LaCi2<-Occu1.layer.LaCi2*PNF\nplot(Occu1.layer.LaCi2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Hoary Bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\n#library(texreg)\nhtmlreg(extract(subset(select.La.Ci2, delta <= 2, recalc.weights = TRUE)), file = \"laci.doc\")\n```\n\n\n##Spotted bat (*Euderma maculatum*)\n\n```{r,echo=FALSE, warning=FALSE,message=FALSE}\nBatOccuEuMa<-BatOccu[,47:49]\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='asis'}\n#N=49\nSimOccuEuMa2<-unmarkedFrameOccu(y = BatOccuEuMa, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.Eu.Ma2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1, SimOccuEuMa2)\n\nselect.Eu.Ma2 <- dredge(model.Occu1.Eu.Ma2, rank = \"AICc\")\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.Eu.Ma2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.Eu.Ma2 <- occu(~ Minhum ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuEuMa2)\n\nselect.Eu.Ma2 <- dredge(model.Occu1.Eu.Ma2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`) & `p(Minhum)`)\n\nbest2.Eu.Ma2<-get.models(select.Eu.Ma2, 1)[[1]]\nOccu1.layer.EuMa2 <- predict(best2.Eu.Ma2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.EuMa2<-Occu1.layer.EuMa2*PNF\nplot(Occu1.layer.EuMa2$layer.1, colNA=\"black\", main=\"Occupancy estimation for Spotted Bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.Eu.Ma2, delta <= 2, recalc.weights = TRUE)), file = \"euma.doc\")\n```\n\n\n\n## western mastiff bat (*Eumops perotis*)\n\n```{r,echo=FALSE, warning=FALSE,message=FALSE}\nBatOccuEuPe<-BatOccu[,50:52]\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results=\"asis\"}\n#N=49\n\nSimOccuEuPe2<-unmarkedFrameOccu(y = BatOccuEuPe, siteCovs =sampling.cov2, obsCovs=Dailycov3)\n\nmodel.Occu1.Eu.Pe2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp + Maxhum + Maxtemp + Minhum + Mintemp ~  1, SimOccuEuPe2)\n\n\nselect.Eu.Pe2 <- dredge(model.Occu1.Eu.Pe2, rank = \"AICc\")\n\nlibrary(texreg)\nhtmlreg(extract(subset(select.Eu.Pe2, delta <= 2, recalc.weights = TRUE)))\n\nmodel.Occu1.Eu.Pe2 <- occu(~ 1 ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + fire_dist + forest_dist, SimOccuEuPe2)\n\n\nselect.Eu.Pe2 <- dredge(model.Occu1.Eu.Pe2, rank = \"AICc\", subset= !( `psi(Burn.intensity.soil)` && `psi(Burn.intensity.Canopy)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.Canopy)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.Canopy^2))` ||\n`psi(Burn.intensity.soil)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.soil)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.soil^2))` && `psi(I(Burn.intensity.basal^2))` ||  \n`psi(Burn.intensity.Canopy)` && `psi(Burn.intensity.basal)` ||\n`psi(Burn.intensity.Canopy)` && `psi(I(Burn.intensity.basal^2))` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(Burn.intensity.basal)` ||\n`psi(I(Burn.intensity.Canopy^2))` && `psi(I(Burn.intensity.basal^2))`))\n\nbest2.Eu.Pe2<-get.models(select.Eu.Pe2, 1)[[1]]\nOccu1.layer.EuPe2 <- predict(best2.Eu.Pe2, type = \"state\", newdata=Predictors)\n\nOccu1.layer.EuPe2<-Occu1.layer.EuPe2*PNF\nplot(Occu1.layer.EuPe2$layer.1, colNA=\"black\", main=\"Occupancy estimation for western mastiff bat\",breaks=brks, col=cols, lab.breaks=brks, zlim=c(0,1))\n\n#library(texreg)\nhtmlreg(extract(subset(select.Eu.Pe2, delta <= 2, recalc.weights = TRUE)), file = \"eupe.doc\")\n```\n\n\n#Relationships between different species of Bats\n\n\n#Fire bats\n\n\n```{r,echo=FALSE, cache=TRUE, fig.width=6, fig.height=6}\n#N=49a\nFireBats<-stack(Occu1.layer.MyYu2$layer.1, Occu1.layer.MyCa2$layer.1, Occu1.layer.MyCi2$layer.1,Occu1.layer.MyVo2$layer.1,Occu1.layer.MyLu2$layer.1, Occu1.layer.LaBl2$layer.1, Occu1.layer.MyEv2$layer.1,Occu1.layer.AnPa2$layer.1, Occu1.layer.MyTh2$layer.1, Occu1.layer.CoTo2$layer.1, Occu1.layer.PaHe2$layer.1, Occu1.layer.EpFu2$layer.1, Occu1.layer.LaNo2$layer.1, Occu1.layer.TaBr2$layer.1, Occu1.layer.LaCi2$layer.1, Occu1.layer.EuMa2$layer.1,Occu1.layer.EuPe2$layer.1)\nnames(FireBats)<-c(\"Yuma Myotis\", \"California bat\",\"Small Footed Myotis\", \"Hairy-winged bat\" ,\"Little Brown Bat\", \"Western Red Bat\",\"Long-eared Bat\" ,\"Pallid Bat\", \"Fringed Bat\", \"Townsend's big-eared Bat\", \"Western Pipistrelle\", \"Big Brow Bat\",\"Silver-Haired Bat\", \"Brazilian free-tailed bat\", \"Hoary Bat\", \"Spotted bat\", \" western mastiff bat\")\n\n\nlevelplot(FireBats, col.regions = rev(terrain.colors(99)), colorkey = list(space = \"bottom\"))\n\nnames(FireBats)<-c(\"MYYU\", \"MYCA\", \"MICI\", \"MYVO\", \"MYLU\", \"LABL\", \"MYEV\", \"ANPA\", \"MYTH\", \"COTO\" ,\"PAHE\" ,\"EPFU\", \"LANO\", \"TABR\", \"LACI\", \"EUMA\", \"EUPE\")\n\nlevelplot(FireBats, col.regions = rev(terrain.colors(99)), colorkey = list(space = \"bottom\"))\n\nraster.values <- raster::extract(FireBats, Coordinates)\nkable(raster.values)\n```\n\n```{r}\nraster.values <- cbind.data.frame(RESULTS$ID, raster.values)\ncolnames(raster.values)<- c(\"ID\", colnames(raster.values[,-1]))\nkable(raster.values)\ncolnames(raster.values[,-1])\n```\n\n```{r}\nNoFireValues <- filter(raster.values, grepl('NF|OB', ID))\nlength(NoFireValues$ID)\n\nFireValues <- filter(raster.values, !grepl('NF|OB', ID))\nlength(FireValues$ID)\n\nsummary(FireValues)\nsummary(NoFireValues)\n```\n\n\n\n```{r,echo=TRUE, cache=TRUE}\nmyyuF<- FireValues[,2]\nmyyuNF<-NoFireValues[,2]\nmyyuT <- t.test(myyuF,myyuNF)\n\nmycaF <- FireValues[,3]\nmycaNF <-NoFireValues[,3]\nmycaT <- t.test(mycaF,mycaNF)\n\nmyciF<- FireValues[,4]\nmyciNF<-NoFireValues[,4]\nmyciT <- t.test(myciF,myciNF)\n\n\nmyluF<- FireValues[,6]\nmyluNF<-NoFireValues[,6]\nmyluT <- t.test(myluF,myluNF)\n\nlablF<- FireValues[,7]\nlablNF<-NoFireValues[,7]\nlablT <- t.test(lablF,lablNF)\n\nmyevF<- FireValues[,8]\nmyevNF<-NoFireValues[,8]\nmyevT<- t.test(myevF,myevNF)\n\nanpaF<- FireValues[,9]\nanpaNF<-NoFireValues[,9]\nanpaT <- t.test(anpaF,anpaNF)\n\nmythF<- FireValues[,10]\nmythNF<-NoFireValues[,10]\nmythT <- t.test(mythF,mythNF)\n\ncotoF<- FireValues[,11]\ncotoNF<-NoFireValues[,11]\ncotoT <- t.test(cotoF,cotoNF)\n\npaheF<- FireValues[,12]\npaheNF<-NoFireValues[,12]\npaheT <- t.test(paheF,paheNF)\n\nepfuF<- FireValues[,13]\nepfuNF<-NoFireValues[,13]\nepfuT <- t.test(epfuF,epfuNF)\n\nlanoF<- FireValues[,14]\nlanoNF<-NoFireValues[,14]\nlanoT <- t.test(lanoF,lanoNF)\n\ntabrF<- FireValues[,15]\ntabrNF<-NoFireValues[,15]\ntabraT <- t.test(tabrF,tabrNF)\n\neumaF<- FireValues[,17]\neumaNF<-NoFireValues[,17]\neumaT<- t.test(eumaF,eumaNF)\n\neupeF<- FireValues[,18]\neupeNF<-NoFireValues[,18]\neupeT <- t.test(eupeF,eupeNF)\n\neupeT$statistic\neupeT$parameter\neupeT$p.value     \neupeT$conf.int\neupeT$conf.int[1]\neupeT$estimate\neupeT$estimate[1]- eupeT$estimate[2]\n\ntestT <- data.frame(Species = c(\"MYYU\", \"MYCA\", \"MICI\",\"MYLU\", \"LABL\", \"MYEV\", \"ANPA\", \"MYTH\", \"COTO\" ,\"PAHE\" ,\"EPFU\", \"LANO\", \"TABRA\", \"EUMA\", \"EUPE\"), \nt = c(myyuT$statistic, mycaT$statistic, myciT$statistic, myluT$statistic, lablT$statistic, myevT$statistic, anpaT$statistic, mythT$statistic, cotoT$statistic, paheT$statistic, epfuT$statistic, lanoT$statistic,tabraT$statistic, eumaT$statistic, eumaT$statistic), \npvalue = c(myyuT$p.value, mycaT$p.value, myciT$p.value, myluT$p.value, lablT$p.value, myevT$p.value, anpaT$p.value, mythT$p.value, cotoT$p.value, paheT$p.value, epfuT$p.value, lanoT$p.value, tabraT$p.value, eumaT$p.value, eupeT$p.value), \nDifference = c((myyuT$estimate[1]- myyuT$estimate[2]), (mycaT$estimate[1]- mycaT$estimate[2]), (myciT$estimate[1]- myciT$estimate[2]), (myluT$estimate[1]- myluT$estimate[2]), (lablT$estimate[1]- lablT$estimate[2]), (myevT$estimate[1]- myevT$estimate[2]), (anpaT$estimate[1]- anpaT$estimate[2]), (mythT$estimate[1]- mythT$estimate[2]), (cotoT$estimate[1]- cotoT$estimate[2]), (paheT$estimate[1]- paheT$estimate[2]), (epfuT$estimate[1]- epfuT$estimate[2]), (lanoT$estimate[1]- lanoT$estimate[2]), (tabraT$estimate[1]- tabraT$estimate[2]), (eumaT$estimate[1]- eumaT$estimate[2]),(eupeT$estimate[1]- eupeT$estimate[2])), \nrow.names = NULL)\n\nkable(testT)\n\n\nwrite.csv(testT, \"testT.csv\")\n# \n# br<-cbind.data.frame(myyu,myci, mylu, labl, myev, anpa, coto, epfu, lano, tabr, eupe)\n# par(las = 2)\n# boxplot(br, outline=FALSE, cex= 0.8, ylab=\"Difference from unburned occupancy\")\n# abline(h=0)\n\n```\n\n```{r,echo=FALSE, cache=TRUE}\n# myyu3<- cbind.data.frame(myyu, rep(\"myyu\", times=(length(myyu))))\n# colnames(myyu3)<-c(\"Occu\", \"Species\")\n# \n# myci3<- cbind.data.frame(myci, rep(\"myci\", times=(length(myci))))\n# colnames(myci3)<-c(\"Occu\", \"Species\")\n# \n# mylu3<- cbind.data.frame(mylu, rep(\"mylu\", times=(length(mylu))))\n# colnames(mylu3)<-c(\"Occu\", \"Species\")\n# \n# labl3<- cbind.data.frame(labl, rep(\"labl\", times=(length(labl))))\n# colnames(labl3)<-c(\"Occu\", \"Species\")\n# \n# myev3<- cbind.data.frame(myev, rep(\"myev\", times=(length(myev))))\n# colnames(myev3)<-c(\"Occu\", \"Species\")\n# \n# anpa3<- cbind.data.frame(anpa, rep(\"anpa\", times=(length(anpa))))\n# colnames(anpa3)<-c(\"Occu\", \"Species\")\n# \n# coto3<- cbind.data.frame(coto, rep(\"coto\", times=(length(coto))))\n# colnames(coto3)<-c(\"Occu\", \"Species\")\n# \n# epfu3<- cbind.data.frame(epfu, rep(\"epfu\", times=(length(epfu))))\n# colnames(epfu3)<-c(\"Occu\", \"Species\")\n# \n# lano3<- cbind.data.frame(lano, rep(\"lano\", times=(length(lano))))\n# colnames(lano3)<-c(\"Occu\", \"Species\")\n# \n# tabr3<- cbind.data.frame(tabr, rep(\"tabr\", times=(length(tabr))))\n# colnames(tabr3)<-c(\"Occu\", \"Species\")\n# \n# eupe3<- cbind.data.frame(eupe, rep(\"eupe\", times=(length(eupe))))\n# colnames(eupe3)<-c(\"Occu\", \"Species\")\n# \n# br3<- rbind(myyu3, myci3, mylu3, labl3, myev3, anpa3, coto3, epfu3, lano3, tabr3, eupe3)\n# br3$Species<-as.factor(br3$Species)\n# \n# g<-ggplot(br3, aes(x=Species, y=Occu))\n# g+geom_jitter(alpha=0.2, aes(color=Species), position = position_jitter(width = 0.1))+theme_bw()+geom_violin(alpha=0.7, color=\"gray\",scale = \"width\")+ stat_summary(fun.y=mean, geom=\"point\", shape=18, size=3, color=\"black\")+ geom_hline(yintercept = 0)+theme(legend.position=\"none\")\n# \n# \n# g+geom_violin(alpha=0.5, color=\"gray\",scale = \"width\")+theme_bw()+ stat_summary(fun.y=mean, geom=\"point\", shape=18, size=3, color=\"black\")+ geom_hline(yintercept = 0)\n# \n# \n# g<-ggplot(br3, aes(x=Species, y=Occu))\n# g+geom_jitter(alpha=0.2, aes(color=\"grey\"), position = position_jitter(width = 0.1))+theme_bw()+geom_violin(alpha=0.7, color=\"gray\",scale = \"width\")+ stat_summary(fun.y=mean, geom=\"point\", shape=18, size=3, color=\"black\")+ geom_hline(yintercept = 0)+theme(legend.position=\"none\")\n\n```\n\n```{r, cache=TRUE}\n# library(vioplot)\n# vioplot(myyu,myci, mylu, labl, myev, anpa, coto, epfu, lano, tabr, eupe, col=\"grey\")\n```\n\n\n#**The End**\n\n\n\n```{r,echo=FALSE, warning=FALSE,message=FALSE, cache=TRUE}\n\n# brickses=c(0,1.01,4)\n# colores=c(\"chartreuse4\", \"darkorange2\")\n# plot(PNF, legend=FALSE)\n# plot((PNF+fire), legend=FALSE, breaks=brickses, col=colores, add=TRUE)\n# points(RESULTS$LONG, RESULTS$LAT, cex=0.5)\n# map.scale(-120.7, 39.5, relwidth = 0.15, metric = TRUE, ratio = FALSE,cex=0.7)\n```\n\n```{r, echo=TRUE}\n#valuetable <- getValues(AllLayers2)\n#km1 <- kmeans(na.omit(valuetable), centers = 5, iter.max = 100, nstart = 10)\n# create a blank raster with default values of 0\n#rNA <- setValues(raster(AllLayers2), 0)\n#for(i in 1:nlayers(AllLayers2)){\n  #rNA[is.na(AllLayers2[[i]])] <- 1\n#}\n# convert rNA to an integer vector\n#rNA <- getValues(rNA)\n# convert valuetable to a data.frame\n#valuetable <- as.data.frame(valuetable)\n# if rNA is a 0, assign the cluster value at that position\n#valuetable$class[rNA==0] <- km1$cluster\n# if rNA is a 1, assign an NA at that position\n#valuetable$class[rNA==1] <- NA\n# create a blank raster\n#classes1 <- raster(AllLayers2)\n# assign values from the 'class' column of valuetable\n#classes1 <- setValues(classes1, valuetable$class)\n#plot(classes1, legend=TRUE, colNA=\"black\")\n#More info on how to do this clasification in *https://geoscripting-wur.github.io/AdvancedRasterAnalysis/*\n```\n\n```{r}\n# best2.My.Yu2\n# \n# summary(best2.My.Yu2)\n# \n# names(best2.My.Yu2)\n# \n# getP(best2.My.Yu2)\n# \n# best2.My.Yu2['state']\n# \n# coef(best2.My.Yu2, type='state')\n# \n# # Variance-covariance matrix\n# vcov(best2.My.Yu2, type='state')\n# \n# # Confidence intervals using profiled likelihood\n# confint(best2.My.Yu2, type='state', method='profile')\n# \n# # Expected values\n# fitted(best2.My.Yu2)\n# \n# logLik(best2.My.Yu2)\n# \n# \n# \n# # Predicted abundance at specified covariate values\n# \n# \n# # Assess goodness-of-fit\n# parboot(best2.My.Yu2)\n# plot(best2.My.Yu2)\n```\n\n#MYYU\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.My.Yu2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n```\n\n#MYCA\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.My.Ca2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#MYCI\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.My.Ci2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n```\n\n#MYVO\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.My.Vo2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#MYLU\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.My.Lu2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#LABL\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.La.Bl2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#MYEV\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.My.Ev2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#ANPA\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.An.Pa2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#MYTH\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.My.Th2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#COTO\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.Co.To2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#PAHE\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.Pa.He2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#EPFU\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.Ep.Fu2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#LANO\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.La.No2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#TABR\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.Ta.Br2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#LACI\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.La.Ci2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#EUMA\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.Eu.Ma2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```\n\n#EUPE\n\n```{r, cache=TRUE, echo=FALSE}\nobs.boot <- mb.gof.test(best2.Eu.Pe2, nsim = 5000)\n##note that more bootstrap samples are recommended\n##(e.g., 1000, 5000, or 10 000\nobs.boot\nprint(obs.boot, digits.vals = 4, digits.chisq = 4)\n\n```",
    "created" : 1472156712162.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "233211392",
    "id" : "1B83CA6E",
    "lastKnownWriteTime" : 1472157876,
    "last_content_update" : 1472157876117,
    "path" : "~/new_bats/Rnew_bats/Firesummary2.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}